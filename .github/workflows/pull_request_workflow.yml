name: Pull Request CI

on:
  push:
    branches: ['main', 'dev', 'prod', 'staging']
  pull_request:

jobs:
  pr_compile_lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Install dependencies
        run: make build

      - name: Golang ci lint
        uses: golangci/golangci-lint-action@v6.1.0

      - name: Run test
        run: make test

  build_and_push:
    needs: pr_compile_lint_test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/oplog_parser:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Pull docker image from github packages
        run: docker pull ghcr.io/${{ github.repository }}/oplog_parser:latest

      - name: Stop and remove existing container
        run: |
          if [ "$(docker ps -q -f name=oplog_parser)" ]; then
            docker stop oplog_parser
            docker rm oplog_parser
          fi

      - name: Run docker container
        run: docker run -d --name oplog_parser -p 8080:8080 ghcr.io/${{ github.repository }}/oplog_parser:latest

      - name: Verify container is running
        run: |
          if [ "$(docker ps -q -f name=oplog_parser)" ]; then
            echo "Container is running successfully"
            docker logs oplog_parser
          else
            echo "Container failed to start"
            exit 1
          fi

  goreleaser:
    needs: pr_compile_lint_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
